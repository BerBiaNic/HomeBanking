openapi: 3.0.1
info:
  title: Swagger admin
  description: 'This is a sample server admin server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://admin.swagger.io/v2
- url: http://admin.swagger.io/v2
tags:
- name: user
  description: Everything about your users
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /client/signup:
    post:
      tags:
      - cliente
      summary: Aggiunta di un nuovo cliente 
      operationId: createClient
      requestBody:
        description: cliente che vuole registrarsi alla piattaforma 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        200:
          description: registrazione effettuata
        400:
          description: dati non validi
          content: {}
        403:
          description: utente già esistente
  /user/{userId}:
    get:
      tags:
      - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getuserById
      parameters: 
      - name: userId
        in: path
        description: ID of user to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: user not found
          content: {}
    post:
      tags:
      - user
      summary: Updates a user 
      operationId: updateuserById
      parameters:
      - name: userId
        in: path
        description: ID of user that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the user
                status:
                  type: string
                  description: Updated status of the user
      responses:
        405:
          description: Invalid input
          content: {}
    delete:
      tags:
      - user
      summary: Deletes a user
      operationId: deleteuser
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: userId
        in: path
        description: user id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: user not found
          content: {}
components:
  schemas:
    Cliente:
      type: object
      properties:
        codice fiscale:
          type: string
        nome:
          type: string
        cognome:
          type: string
        città di nascita:
          type: string
        data di nascita:
          type: string
          format: date
        numero di telefono:
          type: string
        indirizzo di resizenza:
          type: string
        città di residenza:
          type: string
    Account:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        imponta digitale:
          type: integer
        dispositivi associati:
          type: string
        cliente:
          $ref: '#/components/schemas/Cliente'
    CartaPrepagata:
      type: object
      properties:
        numero:
          type: number
          format: double
        saldo contabile:
          type: number
          format: double
        saldo disponibile:
          type: number
          format: double
        data di scadenza:
          type: string
          format: date
        cvv:
          type: integer
        pin:
          type: integer
        account:
          $ref: '#/components/schemas/Account'
    OperazioneCartaPrepagata:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
          format: date
        importo:
          type: number
          format: double
        tipologia:
          type: string
        destinatario:
          type: string
        carta prepagata:
          $ref: '#/components/schemas/CartaPrepagata'
    ContoCorrente:
      type: object
      properties:
        numero:
          type: integer
        iban:
          type: string
        saldo contabile:
          type: number
          format: double
        saldo disponibile:
          type: number
          format: double
        id account:
          $ref: '#/components/schemas/Account'
    OperazioneContoCorrente:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
          format: date
        importo:
          type: number
          format: double
        tipologia:
          type: string
        iban destinatario:
          type: string
        iban conto corrente:
          $ref: '#/components/schemas/ContoCorrente'
    CartaDiDebito:
      type: object
      properties:
        numero:
          type: string
        iban:
          type: string
        data di scadenza:
          type: string
          format: date
        cvv:
          type: integer
        pin:
          type: integer
        numero conto corrente:
          $ref: '#/components/schemas/ContoCorrente'
    OperazioneCartaDebito:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
          format: date
        importo:
          type: number
          format: double
        tipologia:
          type: string
        numero carta proprietario:
          $ref: '#/components/schemas/CartaDiDebito'
        numero carta beneficiario:
          type: string
        
        
      
